<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic" script:moduleType="normal">REM  *****  BASIC  *****

Sub KDProcessMacro()
	doc = ThisComponent
	sheets = doc.Sheets

	Cleanup()

	CsvURL = File("Select KD result")
	sheetImp = SheetBy(CsvURL, "Import")

	CsvURL = File("Select map")
	sheetMap = SheetBy(CsvURL, "Map")

    map = PropsOfUnits(sheetMap)
    Print map.Count

    For row = 0 To 99 ' Make sure data is less this threshold.
        For col = 0 To 1024 ' Make sure data is less than this threshold.
            cell = sheetImp.getCellByPosition(col, row)
            kind = CellType(cell)
            content = CellContent(cell)
            If kind <> "Empty" Then
                Print content & " => " & kind
            End If
        Next col
    Next row

    Set map = map.Dispose()
End Sub

Function Cleanup()
	doc = ThisComponent
	sheets = doc.Sheets

	' Delete previous data

	exists = sheets.hasByName("Import")
	if exists then sheets.removeByName("Import")

	exists = sheets.hasByName("Map")
	if exists then sheets.removeByName("Map")
End Function

Function File(msg) As String
	Dim oFilePicker As Object
	oFilePicker = CreateUnoService("com.sun.star.ui.dialogs.FilePicker")
	oFilePicker.appendFilter("CSV Documents", "*.csv")
	oFilePicker.CurrentFilter = "CSV Documents"
	oFilePicker.Title = msg
	'execution and return check (OK?)
	If oFilePicker.execute = _
		com.sun.star.ui.dialogs.ExecutableDialogResults.OK Then
		File = oFilePicker.Files(0)
	End If
End Function

Function SheetBy(File, Name) As Object
	doc = ThisComponent
	sheets = doc.Sheets

	sheet = doc.createInstance("com.sun.star.sheet.Spreadsheet")
	sheets.insertByName(Name, sheet)

	' CSV encoding is assumed to be UTF-16 LE

	'csv file read options
	Filter = "44,34,65535,1,1/1"
	'Creating a link between the sheet and the .csv source
	sheet.link(File, "", "Text - txt - csv (StarCalc)", _
	Filter, com.sun.star.sheet.SheetLinkMode.VALUE)

	'release link so that the document is independent
	sheet.setLinkMode(com.sun.star.sheet.SheetLinkMode.NONE)
	SheetBy = sheet
End Function

Function CellType(cell) As String
    Select Case cell.getType()
    Case com.sun.star.table.CellContentType.EMPTY
        CellType = "Empty"
    Case com.sun.star.table.CellContentType.VALUE
        CellType = "Value"
    Case com.sun.star.table.CellContentType.TEXT
        CellType = "Text"
    Case com.sun.star.table.CellContentType.FORMULA
        CellType = "Formula"
    Case Else
        CellType = "Unknown"
    End Select
End Function

Function CellContent(cell) As Variant
    Dim content As Variant
    kind = CellType(cell)
    If kind = "Empty" Then
        content = Empty
    ElseIf kind = "Value" Then
        content = cell.getValue()
    ElseIf kind = "Text" Then
        content = cell.getString()
    End If
    CellContent = content
End Function

Function PropsOfUnits(sheetMap) As Variant
    GlobalScope.BasicLibraries.loadLibrary("ScriptForge")
    Dim map As Variant
    map = CreateScriptService("Dictionary")

    For row = 0 To 33 ' Make sure data is less this threshold.
        Dim Prop As String ' Map consists of text, not number.
        Dim Obj As String
        col = 0
        cell = sheetMap.getCellByPosition(col, row)
        Prop = cell.getString()
        col = 1 ' Make sure has only 2 columns.
        cell = sheetMap.getCellByPosition(col, row)
        Obj = cell.getString()
        If Prop <> Empty AND Obj <> Empty Then
            map.Add(Prop, Obj)
            Print Prop & " , " & Obj
        EndIf
    Next row

    PropsOfUnits = map
End Function

</script:module>
