<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic" script:moduleType="normal">REM  *****  BASIC  *****

Sub KDProcessMacro()
	doc = ThisComponent
	sheets = doc.Sheets

	Cleanup()

	CsvURL = File("Select KD result")
	sheetI = SheetBy(CsvURL, "Import")

	CsvURL = File("Select map")
	sheetM = SheetBy(CsvURL, "Map")

    Dim propsOfUnits As New Collection

    For row = 0 To 99 ' Make sure data is less this threshold.
        For col = 0 To 1024 ' Make sure data is less than this threshold.
            cell = sheetI.getCellByPosition(col, row)
            whatKind = GetCellType(cell)
            If whatKind <> "Empty" Then
                Dim content As Variant
                If whatKind = "Value" Then
                    content = cell.getValue()
                ElseIf whatKind = "Text" Then
                    content = cell.getString()
                End If
                Print content & " => " & whatKind
            End If
        Next col
    Next row
End Sub

Function Cleanup()
	doc = ThisComponent
	sheets = doc.Sheets

	' Delete previous data

	exists = sheets.hasByName("Import")
	if exists then sheets.removeByName("Import")

	exists = sheets.hasByName("Map")
	if exists then sheets.removeByName("Map")
End Function

Function File(msg) As String
	Dim oFilePicker As Object
	oFilePicker = CreateUnoService("com.sun.star.ui.dialogs.FilePicker")
	oFilePicker.appendFilter("CSV Documents", "*.csv")
	oFilePicker.CurrentFilter = "CSV Documents"
	oFilePicker.Title = msg
	'execution and return check (OK?)
	If oFilePicker.execute = _
		com.sun.star.ui.dialogs.ExecutableDialogResults.OK Then
		File = oFilePicker.Files(0)
	End If
End Function

Function SheetBy(File, Name) As Object
	doc = ThisComponent
	sheets = doc.Sheets

	sheet = doc.createInstance("com.sun.star.sheet.Spreadsheet")
	sheets.insertByName(Name, sheet)

	' CSV encoding is assumed to be UTF-16 LE

	'csv file read options
	Filter = "44,34,65535,1,1/1"
	'Creating a link between the sheet and the .csv source
	sheet.link(File, "", "Text - txt - csv (StarCalc)", _
	Filter, com.sun.star.sheet.SheetLinkMode.VALUE)

	'release link so that the document is independent
	sheet.setLinkMode(com.sun.star.sheet.SheetLinkMode.NONE)
	SheetBy = sheet
End Function

Function GetCellType(oCell) As String
    Select Case oCell.getType()
    Case com.sun.star.table.CellContentType.EMPTY
        GetCellType = "Empty"
    Case com.sun.star.table.CellContentType.VALUE
        GetCellType = "Value"
    Case com.sun.star.table.CellContentType.TEXT
        GetCellType = "Text"
    Case com.sun.star.table.CellContentType.FORMULA
        GetCellType = "Formula"
    Case Else
        GetCellType = "Unknown"
    End Select
End Function

</script:module>
