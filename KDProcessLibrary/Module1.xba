<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic" script:moduleType="normal">REM  *****  BASIC  *****

Sub KDProcessMacro()
	doc = ThisComponent
	sheets = doc.Sheets

	Cleanup()

	CsvURL = File("Select KD result")
	sheetI = SheetBy(CsvURL, "Import")

	CsvURL = File("Select map")
	sheetM = SheetBy(CsvURL, "Map")

    GlobalScope.BasicLibraries.loadLibrary("ScriptForge")
    Dim map As Variant
    map = CreateScriptService("Dictionary")
    PropsObjMap(sheetM, map) ' To fill map.
	Print map.Count

    Dim unitProp(0 to 0) As String
    Dim unit As Long
    unit = 1
    UnitProps(unit, map, sheetI, unitProp) ' unitProp is going to be filled out.
    Print UBound(unitProp)

    sheetE = doc.createInstance("com.sun.star.sheet.Spreadsheet")
	sheets.insertByName("Export", sheetE)

    Export(sheetI, sheetE)
End Sub

Function Cleanup()
	doc = ThisComponent
	sheets = doc.Sheets

	' Delete previous data

	exists = sheets.hasByName("Import")
	if exists then sheets.removeByName("Import")

	exists = sheets.hasByName("Map")
	if exists then sheets.removeByName("Map")

	exists = sheets.hasByName("Export")
	if exists then sheets.removeByName("Export")
End Function

Function File(msg) As String
	Dim oFilePicker As Object
	oFilePicker = CreateUnoService("com.sun.star.ui.dialogs.FilePicker")
	oFilePicker.appendFilter("CSV Documents", "*.csv")
	oFilePicker.CurrentFilter = "CSV Documents"
	oFilePicker.Title = msg
	'execution and return check (OK?)
	If oFilePicker.execute = _
		com.sun.star.ui.dialogs.ExecutableDialogResults.OK Then
		File = oFilePicker.Files(0)
	End If
End Function

Function SheetBy(File, Name) As Object
	doc = ThisComponent
	sheets = doc.Sheets

	sheet = doc.createInstance("com.sun.star.sheet.Spreadsheet")
	sheets.insertByName(Name, sheet)

	' CSV encoding is assumed to be UTF-16 LE

	'csv file read options
	Filter = "44,34,65535,1,1/1"
	'Creating a link between the sheet and the .csv source
	sheet.link(File, "", "Text - txt - csv (StarCalc)", _
	Filter, com.sun.star.sheet.SheetLinkMode.VALUE)

	'release link so that the document is independent
	sheet.setLinkMode(com.sun.star.sheet.SheetLinkMode.NONE)
	SheetBy = sheet
End Function

Sub PropsObjMap(sheetM, map) ' ByRef is default.
    ' Map has 2 columns.
    ' 1st column contains properties.
    ' 2nd column contains an object to which a propert applies.

    For row = 0 To 9 ' Make sure data is less this threshold.
        Dim propT As String : propT = ""
        Dim prop As String : prop = ""
        Dim objT As String : objT = ""
        Dim obj As String : obj = ""
        cell = sheetM.getCellByPosition(0, row) ' Map has 2 columns.
        kind = cell.getType()
        Select Case kind
        Case com.sun.star.table.CellContentType.TEXT
            propT = "TEXT"
            prop = cell.getString()
        Case Else : propT = ""
        End Select
        cell = sheetM.getCellByPosition(1, row) ' Map has 2 columns.
        kind = cell.getType()
        Select Case kind
        Case com.sun.star.table.CellContentType.TEXT
            objT = "TEXT"
            obj = cell.getString()
        Case Else : objT = ""
        End Select
        If propT = "TEXT" AND objT = "TEXT" Then
            map.Add(prop, obj)
        EndIf
    Next row
End Sub

Function UnitProps(unit, map, sheetI, ByRef unitProp As Variant)
    Dim props(0 to 9) As String
    For row = 0 To 1024 ' Make sure data is less this threshold.
        Dim cellT As String : cellT = ""
        Dim cellC As Long : cellC = 0
        cell = sheetI.getCellByPosition(0, row)
        kind = cell.getType()
        Select Case kind
        Case com.sun.star.table.CellContentType.VALUE
            cellT = "VALUE"
            cellC = cell.getValue()
        Case Else : cellT = ""
        End Select

        If cellC = unit Then
            For col = 1 To 14 ' Make sure data is less than this threshold.
                Dim cell_T As String : cell_T = ""
                Dim cell_C As String : cell_C = ""
                cell = sheetI.getCellByPosition(col, row)
                kind = cell.getType()
                Select Case kind
                Case com.sun.star.table.CellContentType.TEXT
                    cell_T = "TEXT"
                    cell_C = cell.getString()
                End Select

                If cell_T = "TEXT" Then
                    Dim keys As Variant, key As String
                    keys = map.Keys
                    For Each key In keys
                        pos = InStr(cell_C, key)
                        If pos > 0 Then ' Does row contain any of the map keys?
                            AppendToArray(unitProp, key)
                        Else
                        End If
                    Next key
                Else
                    ' Nothing.
                End If
            Next col
        Else
            ' This row is not related to desired unit.
        End If

    Next row
End Function

Sub AppendToArray(oData(), ByVal x)
    Dim iUB As Integer 'The upper bound of the array.
    Dim iLB As Integer 'The lower bound of the array.
    iUB = UBound(oData())
    iLB = LBound(oData())
    if iUB = -1 and iLB = 0 then ' An array has no defined dimension.
        Redim oData(iLB)
    else
        ReDim Preserve oData(iLB To iUB +1)
    endif
    oData(iUB +1) = x
End Sub

Sub Export(sheetI, sheetE)
    For row = 0 To 1024 ' Make sure data is less this threshold.
        For col = 0 To 14 ' Make sure data is less than this threshold.
            Dim cellT As String : cellT = ""
            Dim cellC As Variant : cellC = 0.0
            cell = sheetI.getCellByPosition(col, row)
            kind = cell.getType()
            Select Case kind
            Case com.sun.star.table.CellContentType.VALUE
                cellT = "VALUE"
                cellC = cell.getValue()
            Case com.sun.star.table.CellContentType.TEXT
                cellT = "TEXT"
                cellC = cell.getString()
            End Select
            cell = sheetE.getCellByPosition(col, row)
            If cellT = "VALUE" Then
                cell.setValue(cellC)
            ElseIf cellT = "TEXT" Then
                cell.setString(cellC)
            Else
                ' Don't copy.
            End If
        Next col
    Next row
End Sub

</script:module>
